name: Dev Build

concurrency:
  group: "build"
  cancel-in-progress: false

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - run: chmod +x gradlew

      - name: Set up Node JS
        uses: actions/setup-node@v3
        with:
          node-version: latest

      - name: Get current dev build number
        id: dev-build
        run: |
          cd .github/devbuilds
          npm install
          node get_number.js >> $GITHUB_OUTPUT

      - name: Build
        run: ./gradlew build -Pcommit=${{ github.sha }} -Pdevbuild=${{ steps.dev-build.outputs.number }}

      - name: Get build timestamp
        id: timestamp
        run: |
          echo "BUILD_TIME=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

      - name: List Build Directory
        run: |
          echo "Listing build directory contents:"
          ls -R build/libs/

      - name: Create tag
        id: create_tag
        run: |
          TAG_NAME="dev-${BUILD_TIME}"
          echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV
          
          # 检查标签是否存在
          TAG_EXISTS=$(git tag -l $TAG_NAME)
          if [ "$TAG_EXISTS" != "" ]; then
            SUFFIX=1
            NEW_TAG_NAME="${TAG_NAME}-${SUFFIX}"
            echo "TAG_NAME=${NEW_TAG_NAME}" >> $GITHUB_ENV
            git tag $NEW_TAG_NAME
            git push origin $NEW_TAG_NAME
          else
            git tag $TAG_NAME
            git push origin $TAG_NAME
          fi

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: "Development Build ${{ env.BUILD_TIME }}"
          files: build/libs/meteor-client-*.jar
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
